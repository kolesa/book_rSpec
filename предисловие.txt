

Предисловие  

Предостережение! Вы влюбились в ловушку. Вы подняли эту книгу, думая, что это было о RSpec. К счастью, Вы решили прочитать предисловие. Хороший! Это дает мне возможность сказать Вам об ошибке, которую Вы только сделали и возможно спасать Вас от неожиданной судьбы.

Вы видите, эта книга не о RSpec вообще. О, RSpec конечно упомянут. Есть много примеров того, как использовать это. В части III есть даже очень детальное руководство ссылки. Но это - все только часть коварно умного обмана, потому что эта книга не о RSpec.

Возможно Вы думали, что Вы могли бы читать об Огурце? В конце концов, Часть IV называют "Огурцом". О, эти авторы умны; Бог они! Они замусорили эту книгу примерами и деталями, которые говорят Вам всем об Огурце во всей ее запутанности и всех ее обильных fiddledy-битах. Есть даже секция при использовании этого с Рельсами и Webrat и всеми другими окровавленными вещами, что Вы должны будете стать Огуречным экспертом. Но эта книга не об Огурце.

Нет. Эта книга не о RSpec. И эта книга не о частоте ошибок по битам Cucum-. Эта книга о...

Я не уверен, что я должен сказать Вам. Я подразумеваю, как только тайна выходит, склонно вызвать погром. Если это когда-либо выходило, кто действительно аудитория для этой книги, если бы массы учились о дьявольском плане, выполняемом в их среде, я не уверен, что наша цивилизация выжила бы.

Вы видите... (прибывают ближе, и покрывают, это расстается Вашей рукой, таким образом никто больше не может видеть это)... Вы видите, эта книга не для... (покрытый?)... это не для Рубиновых программистов!

Там, я сказал это! Теперь не паникуйте, и не понижайте книгу - независимо от того, что Вы делаете, не понижайте книгу! Держитесь напряженные, и держите покрытое. Не позволяйте кому - либо еще видеть.

Да, Вы видите, эта книга не о RSpec. Это не об Огурце, Это не для Рубиновых программистов. Эта книга для... (покрытый снова?)... это для всех программистов!

Держите хорошую напряженную власть. Я знаю, что это твердо. Не озирайтесь подозрительно. Не привлекайте внимание к вам непосредственно. Только попытайтесь остаться спокойными, дышать, ни - mally, и продолжать читать.

Да, весь кодекс находится в Рубине. Да, все примеры используют RSpec и Огурец до одной степени или другого. Да, если Вы прочитаете эту книгу, то Вы изучите RSpec, Огурец, и вещи о Рубине и Рельсы и Webrat, который Вы не знали прежде. Без сомнения об этом. Помните, лучшая ложь - neartruths.

Вот вещь. В то время как Вы читаете эту книгу, Вы будете думать, что Вы узнаете обо всех тех прохладных инструментах. Вы будете думать “о, прохладный, я, учатся - луг RSpec и Огурец.” Но Вы будете изучать что - то еще в то же самое время! Кое-что неожиданное. Кое-что необъявленное. Некоторые - вещь, возможно, неприятный.

Поскольку Вы читаете эти страницы, скрытый meme будет ползать в Ваш ум-a meme такой потенции и власти, что это, вероятно, изменит все о способе, которым Вы программируете. И не только, как Вы программируете в Рубине!

Если Вы читаете эту книгу, что meme изменит путь, Вы программируете в Яве, C #, Питон, или (о, Бог, мысль) КОБОЛ! Эта книга изменит путь Вы кодовый период!

Хуже, Вы не должны быть Рубиновым программистом, чтобы быть зараженными этим meme. Поскольку я сказал, эти авторы умны. Их безобразный план состоит в том, чтобы заразить всех программистов этим meme. Вы видите, они умно построили Рубиновый кодекс в этой книге так, чтобы это могло быть понято (удушьем) любой программист вообще! Я подразумеваю, это хуже чем Fluoridation!

Любой программист, который поднимает эту книгу, будет заражен meme. И meme является тонким. И meme является постоянным. И у meme будет его путь. И когда это делает, наша промышленность никогда не будет тем же самым снова. Действительно ли Вы желаете рискнуть этим?

Каков этот meme? Какое название мы дадим этому? meme - легион! Это не только Проворно, хотя Проворно там. Это не только TDD и BDD, хотя оба там. Это не только Непрерывная Интеграция, Accep-tance Делавшее пробную поездку Развитие, Принятие, на Котором делают пробную поездку, Планируя, или даже Чрезвычайное Программирование, хотя все те вещи присутствуют в meme.

Нет, meme - больше чем любая из тех вещей. meme - синергистическое варево ведьм некоторых из самых инфекционных и эффективных идей прошлых двух десятилетий. meme...

Смейте я говорю это? meme...... Мастерство.

—Robert C. Martin
 
 Об Авторах 

Дэвид Chelimsky - ведущий разработчик/автогрейдер RSpec, и поспособствовал нескольким другим открытым исходным проектам, включая Огурец, Арубу, и Рельсы. Он развивал программное обеспечение больше десятилетия, включая обучение трех лет и mentoring проворные команды в Наставнике Объекта. Он в настоящее время - Старший Инженер Программного обеспечения в DRW Торговая Группа в Чикаго, Иллинойс. В его свободном времени Дэвиду нравится играть на гитаре, ехать, и говорить кое-что напоминающее португальский язык.

Дейв Astels - Директор Технологии в ChannelFireball.com и был связан с программным обеспечением и вычисляющий больше 25 лет, недавно проведя несколько лет, работая исключительно с Рубином и Рельсами. Дейв написал статью, которая побудила Стивена Baker начинать проект RSpec.

Зак Деннис является человеком соучредителя и товарища во Взаимно Человеческом Программном обеспечении, опытном таможенном консультировании стратегии и проекта программного обеспечения в Гранд-Рапидсе, Мичиган. Он наслаждался Рубином в течение почти восьми лет и поспособствовал нескольким проектам, таким как стандартная документация библиотеки Рубина, Рубин на Рельсах, и RSpec. В его свободном времени Зак любит проводить время с его семьей, непрерывно изучением, игрой музыки, и управлением continuousthinking.com.

Aslak Hellesoy является Старшим Инженером Программного обеспечения в DRW Торговая Группа в Лондоне. В то время как помощь этой книге он был Руководителем исследовательских работ BEKK, Консультирующегося в Осло. В 2003, после семи лет профессионального Явского программирования, он влюбился в Рубин. Он поспособствовал множеству открытых исходных проектов и является основателем Огуречного проекта. Aslak нравится готовить, ходить на лыжах, и ехать.

Брайен Helmkamp поддерживает Webrat, Рубиновую библиотеку, чтобы осуществить приемочные испытания на заявления сети выразительным и ремонтируемым способом, и является активным участником Рубина Нью-Йорка commu-nity. Брайен - CTO Эффективности 2.0, запуск, который помогает людям понять и уменьшить свое использование энергии.

Дэн North пишет программное обеспечение и команды тренеров и организации в проворных и скудных методах. Он полагает, что большинство проблем, что команды оказываются, о коммуникации и понимании, которое является, почему он помещает так много акцента в “понимание правильно слов.” В 2003-4 это принудило его развивать идеи, которые станут Поведением управляемое Развитие. Он рад сообществом, которое выросло вокруг RSpec и Огурца, и особенно энтузиазма и посвящения их основных вкладчиков. Дэн в настоящее время - Старший Инженер Программного обеспечения в DRW Торговая Группа в Лондоне, где он добирается, чтобы фактически закодировать снова!
 
 Подтверждения 

Эта книга - продукт длинной поездки, которая отшатывалась в 2006, когда предложение Дейва Astels' было принято Прагматической Книжной полкой. Дейв, Aslak, и я (Дэвид) упорно трудился, чтобы выдвинуть RSpec вперед, таким образом Дейв пригласил нас присоединяться к нему в письме книги.

Оказывается, что автогрейдеры программного обеспечения, пишущие о программном обеспечении, они поддерживают подарки немного интересных вызовов. Были много раз, когда мы будем писать о специфическом аспекте RSpec и понимать, что был лучший путь. Следующая вещь, которую Вы знаете, мы взламываем RSpec, чтобы сделать усовершенствования и возвращающийся к книге, чтобы обновить все недавно перестававшие использовать ссылки. Добавьте к тем различным личным и профессиональным испытаниям, которые потянули нас всех в различных указаниях, и это - чудо, что Вы даже читаете это.

Большой благодаря Дейву, Aslak, Дэну, Брайену, Заку, и Брайену для содержания каждый из них внесенные. Широта опыта и знания, которое каждый принес в книгу, неоценима.

Спасибо, также, Дэну для BDD, и Дейву для того, чтобы представить меня BDD и проекту RSpec.

Благодаря Стивену Baker для того, чтобы создать RSpec.

Благодаря нашим техническим рецензентам: Маркус Ahvne, Арон Bedra, Ian Dees, Craig Demyanovich, Corey Haines, Стюарт Halloway, Sean Kellogg, Бен Mabey, Фредерик Ros, Бретт Schuchert, Dean Wampler, и Matt Wynne.

Благодаря всем бета читателям, которые сделали предложения и сделали большую работу по указанию на несогласованности в кодовых примерах.

Благодаря Дяде Бобу Мартину для его вдохновленного и вдохновляющего предисловия и для того, чтобы брать меня под его крылом в Наставнике Объекта. Именно Боб сначала представил меня FitNesse и идее удобочитаемых клиентом приемочных испытаний. И это было, которые испытывают, который зажигал мой интерес в RSpec и RBehave Дэна (предшественник Огурца).

Благодаря Jacquelyn Carter, нашему редактору, для Вашего бесконечного терпения. Это была дальняя дорога, Джекки, но мы фактически сделали это.

Благодаря моему давнему другу и коллеге, Randy Stearns, для искусства покрытия.

В дополнение ко всем людям, которые поспособствовали непосредственно книге, я очень удачлив быть окруженным друзьями, которые поддерживали меня и держали меня через все личные трудности, с которыми я сталкивался, в то время как эта книга была в процессе. Randy Stearns и Stacey Bashara, я благодарю Вас за не только быть великими друзьями, но и за то, что был видом работодателей, которые обеспечивают прекрасный баланс комнаты, чтобы работать (и чувствовать себя производительными и ценными) и комната, чтобы дышать перед лицом личных вызовов.

И наконец, к Flor Pinho, моему партнеру в очень многих вещах, я благодарю Вас за по-видимому бесконечную любовь, поддержку, и терпение (мы можем наконец прекратить говорить “после книги!”). Спасибо, спасибо, и, снова, спасибо.
 
 Предисловие 

Книга RSpec - исследование Поведения управляемое Развитие и инструменты, которые Рубиновые разработчики используют, практикуя BDD: RSpec, Огурец, и др.

Все инструменты и библиотеки, используемые в этой книге, находятся под регулярным развитием с вкладами от ярких сообществ. К тому времени, когда Вы читаете это, есть очень вероятно новые выпуски многих, если не все они. Примерами в этой книге все управляли, чтобы гарантировать, что они выполняют и свободны от опечаток. Чтобы обеспечить себя самый гладкий путь через уроки в этой книге, мы настоятельно поощряем Вас использовать те же самые версии, которые мы использовали.


Ruby and Gem Versions

•  ruby-1.8.7 (1)

•  rubygems-1.3.7

•  rspec-2.0.0

•  rspec-rails-2.0.0

•  cucumber-0.9.2

•  cucumber-rails-0.3.2

•  database_cleaner-0.5.2

•  webrat-0.7.2

•  selenium-client-1.2.18

•  rails-3.0.0


1. Примеры должны все работать с рубином 1.9.2 так же как рубином 1.8.7, но продукция будет время от времени различна.


Downloading the Code Examples

Большинство кодовых примеров в этой книге доступно для загрузки от http://pragprog.com/titles/achbd/source_code. Файлы вообще сгруппированы главой и находятся часто в пронумерованных справочниках, которые представляют снимки кодекса, поскольку Вы прогрессируете через осуществление.


What’s in This Book

Мы начинаем с практической обучающей программы в Главе 3, Описание Особенностей, на странице 37, в которой мы строим простую логическую игру, которую Вы можете играть на линии команды. Это разбудит Вас и бегущий быстро с RSpec и Огурцом и обеспечит смысл техники BDD, осуществленной автогрейдерами RSPEC и вкладчиками.

Начинаясь с Главы 10, случая для BDD, на странице 125, следующая часть книги обеспечивает, вводная информация намеревалась поместить эти инструменты и методы в больший контекст. В этой части Вы будете читать о начальных побуждениях для BDD, его истории в Чрезвычайном Программировании (XP), и что мы подразумеваем, когда мы говорим, что мы находим, что Делавшее пробную поездку Развитие (TDD) так проект и практика документации, как это - практика тестирования.

Как только Вы были через обучающую программу или если у Вас уже будет практическое знание RSpec, то Вы найдете, что детальное исследование RSpec начинается - ning с Главы 12, Кодовых Примеров, на странице 150. Прочитайте эту часть, чтобы улучшить Ваше понимание различных услуг, которые Вы получаете с RSpec, в пределах от простых ожиданий, которые встроены к обычаю formatters для того, чтобы представить продукцию, соответствующую для различных зрителей.

You’ll also find material on RSpec’s evolving extension API, which supports IDE integration  by making it easy to hook  into  RSpec’s runner. It also supports framework-specific extensions (like rspec-rails), making it simple to extend example groups with custom expectations, and expressive macros that do a lot with little effort.

Так же детальное исследование Огурца начинается на Главе 17, Введении к Огурцу, на странице 252. Огурец - Aslak Hellesoy’s перевыполнение структуры Дэна North's RBehave, которая является структурой BDD, предназначенной при выражении прикладного поведения в автоматизированных сценариях де-scribed снаружи заявления.
 
В этой части книги Вы изучите все о Данном триадой BDD, Когда, и Затем - и различные подходы к организации автоматизированных сценариев, чтобы держать их выразительными, скудными, и ремонтируемыми.

RSpec конечно должен, долг благодарности Рубину на Рельсах для того, чтобы помочь строят и способствуют сообществу, которое заботится о тестировании. Начиная с Главы 19, BDD в Рельсах, на странице 283, мы представим Вас Определенным для рельсов расширениям к RSpec и Огурцу и поможем Вам развить практическое понимание того, как приблизиться к развитию Рельсов от внешней стороны в.

Ищете ли Вы обучающие программы, материал ссылки, подсказки интеграции, подсказки расширения, и так далее, Вы приехали в правильное место.
